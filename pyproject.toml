[tool.poetry]
name = "mini-x"
version = "0.1.0"
description = ""
authors = ["Abdulrahman Alshawakri <abdulrahman.alshawakri@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.11"
fastapi = "^0.111.0"
pydantic = "^2.7.1"
pyjwt = "^2.8.0"
passlib = {version="^1.7.4", extras=["bcrypt"]}
sqlalchemy = "^2.0.30"
alembic = "^1.13.1"
psycopg2-binary = "^2.9.9"

[tool.poetry.group.lint.dependencies]
ruff = "^0.4.5"
mypy = "^1.10.0"
pre-commit = "^3.7.1"

[tool.poetry.group.test.dependencies]
pytest-cov = "^5.0.0"
pytest = "^8.2.1"

[tool.ruff]
# Refrence the suggested configs by the official doc https://docs.astral.sh/ruff/configuration/

# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

# Same as Black.
line-length = 88
indent-width = 4

# Assume Python 3.11
target-version = "py311"

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = ["E4", "E7", "E9", "F"]
ignore = []

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

[tool.mypy]
files = "**/*.py"
exclude = [
    ".venv",
    "venv",
    ".pytest_cache",
    ".mypy_cache",
    "__pycache__"
]
ignore_missing_imports = true
show_error_codes = true
explicit_package_bases = true
namespace_packages = true

[tool.pytest.ini_options]
addopts = "--cov=flood_fill --cov-report=term-missing"


[tool.coverage.run]
omit = [
    "*/__main__.py",
    "*/main.py",
    "*_abc.py"
]


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
